[build-system]
requires = ["setuptools>=68.0.0", "wheel>=0.41.0"]
build-backend = "setuptools.build_meta"

[project]
name = "chisel"
version = "1.0.0"
description = "AI-Powered Text Rephrasing Tool with Global Hotkey Support"
authors = [
    {name = "Chisel Development Team", email = "dev@chisel.ai"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["ai", "text-processing", "hotkey", "desktop", "productivity"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Desktop Environment",
    "Topic :: Office/Business :: Office Suites",
    "Topic :: Text Processing",
]
dependencies = [
    "PyQt6>=6.6.0",
    "pynput>=1.7.6",
    "httpx>=0.25.0",
    "requests>=2.31.0",
    "psutil>=5.9.0",
    "plyer>=2.1.0",
    "pydantic>=2.5.0",
    "keyring>=24.3.0",
    "loguru>=0.7.0",
    "pyperclip>=1.8.2",
    "pywin32>=306; sys_platform=='win32'",
    "PyObjC>=10.1; sys_platform=='darwin'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-qt>=4.2.0",
    "pytest-mock>=3.11.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    "pre-commit>=3.4.0",
    "pyinstaller>=6.3.0",
]

[project.urls]
Homepage = "https://github.com/chisel/chisel"
Repository = "https://github.com/chisel/chisel"
Documentation = "https://chisel.readthedocs.io"
"Bug Tracker" = "https://github.com/chisel/chisel/issues"

[project.scripts]
chisel = "chisel.app:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["chisel"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true
explicit_package_bases = true

[[tool.mypy.overrides]]
module = [
    "pynput.*",
    "plyer.*",
    "keyring.*",
    "pyperclip.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=src/chisel",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/chisel"]
omit = [
    "tests/*",
    "src/chisel/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]